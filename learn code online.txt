<b> Learn Code online Javascript Notes</b>

	to initialize any vairable,funtion we use 3 types: let is mostly used.
	var is used for type whose value we want ot change in future.
	const is used when we don't want to change value ever, it helps in solving errors faster.

1.	Template literals or styling Interpolation.
	In this, instead of calling vairable out of bracket we can call it inside string with syntax : `${variable name}`
	To print lot of data in beautiful way, first in console.log brackets , we use backticks `` 
	and then inside these backticks ,we can print whatever data(if it is declared) we want by dollar function.
	syntax: name = "jai";
	name of person is : ${name}
	
	$ = it means "with" or getElementbyID
	*cd = current directory

2. Operator = mathematical function like + , - , * , / etc are called operator.
	math.round is used to round off decimal value into simple number form.

3. Conditional statement : if, else, else if, elif, for, while, do while.
	&& and operator only if both conditional is true, || or operator when any of condition is true.

4. Ternary operator : 'if' statement can be represented by '?' , after this write condition to get output.
    e.g: userName ? console.log("Welcome") : console.log("Not Welcomed"); //if username is true it will print 
    first conditional else it will print second condition.

5. Coercion : it means conversion of one type of value to other type. like string to number and number to string.
	javascript assumes alot of things. in js ,when == is used to loosly compare 2 values to forcefully give 
	true value, it is called coercion. to make it more accurate , we use === to compare data types as well. 

6. Function : Block of code which can reused. syntax: 
	functionname(){code to be reused};
	3 parts of function are:
		parameter: when values are passed inside simple parenthesis - functionname(parameters are declared here)
		argument: are values passed inside curly brackets. functionname(){arguments};
		method: are used to define what function should do. (method is like alchemy)

	*argument and parameter can be same in function as both are value pass inside function 
	but difference is in positioning of these.
	*Function can be passed to variable and it will act as a variable. all properties of variable can be
	applied to function.

7. Context : Whenever a function is excuted a context comes into working which decides excution order of function.
	There are 2 types of context => 
	1. Global = its is default, code will scan everywhere in window/ entire code and get that value and 
		return them from anywhere.
	2. Excution context => Excution is done in serial order but global excution will be excuted at last stage. 
		when function is called, it will first excute in its own context which inside its scope.
	when code is run its will check 3 things : 
		a. variable object 
		b. scope of function 
		c. this keyword
		
	*Usually js has global context which means it can call function anywhere in browser and anywhere inside code.
	
	=> Whenever excution happens there are 2 rules which are followed:
	1.function is scanned and made available globally. i.e functions can be called in any order and program will 
	scan globally and it will be available everywhere in program. it can work in unserialized order.
	2.variable is scanned everywhere and made undefined. i.e a vairable cannot be used before it is called. it 
	will work only in serialized order.

7.  Code hoisting: when a var is used before it is defined. 
	when we try to print a variable first and then define it.
	 	console.log(name);
		var name = "jai";
	
8. Scope Chaining = small kid can ask for ask ice cream to his big bro , big bro can ask for ice to his dad but inverse 
	is not possible.
	similarly function first check for value inside its scope then it check value in next function scope and then to 
	nth function and at last it will find global value and execute it.
	
9. this keyword = this keyword tells scope of object or function. 
	For regular function calls, this points to a window object.
	it is used to point a argument towards another value inside of same array or another function. it tells where
	that variable scope is and how to get data from it. it is a empty scope, it will only print parenthesis. 

10. Array = it collection of different data. we can add or delete data , we can also print any data using index method. 
	syntax : var arrayname = ["data_1", "data_2".....data_n];
	var arrayname = new array("data_1", "data_2".....data_n);

	properties we can use on array:
				BASIC
	console.log(arrayname) to print array.
	console.log(array.length) to print length of array.
	array[1] = new_data  to change some value in array.
	array_name.push() to add a data from rigth side.
	array_name.pop() to remove certain data from right side.
	array_name.shift() to remove data from left side.
	array_name.unshift()  to add data from left side.
				INTERMEDIATE
	console.log(user.indexOf("data_item"))	to print index no of data you want to search. if item we search is not
	present it will simply print -1.
	console.log(array_name.fill(1)) = it will fill all the values inside array with value defined inside parenthesis.
	we can then tell array to starting and ending point of filling the array.
	console.log(array_name.filter(arrow_funtion)); = it will filter elements from array according condition defined
	inside arrow function.
	console.log(array_name.slice(1,3)); = it will slice value/elements and print it from range 1 and 3.

	*whenever we pass a range ,first number where elements counting starts is inclusive and it will be included, 
	second value will be exclusive where range ends and it will be not included.

	console.log(array_name.splice(1,3)); =  it will change the values between given range and replace them with 
	value we pass.
	
	*here we do give inclusive value i.e starting point but exclusive value is not there instead that is counted 
	as well.

11. Arrow function = it is alternative to traditional function expression. just simply we can call whole function
	in single line inside parenthesis.
	A arrow function consists of 3 parts: 
	In first part, function keyword is removed and instead we use a variable which is declared above, as function name.
	In second name, parameter is declared after equal to sign and after that there is another = to which acts as
	curly brackets for arrowfunction.
	In third part, after equal sign we declare all the arguments and there is no need of curly brackets.
	return keyword is necessary in arrow function if u r still using curly bracets.
	return keyword is output function. 
	syntax: variable name = parameter = argument;

	*we don't need console.log to print value for arrow_fn, as arrow_fn prints all values by default. 

12. Callback function = We can use a function with array and call back any value from that function.

13. Objects = object is like real life object which have diffent features or style or thinking ,
        all of which is called properties. 
	syntax =>	initialize object -> 
			var object_name {
				keys : values,
				keys1 : value1,
			}
	=>to change properties of oject, dot method is best. oject.name = new_property
	*console.table to print values/elements inside obejct or array in a tabular form.

14. Method = Method is basically a function passed inside a array as a arguments/key. When we create a small 
	function inside a array, it is called method.
	to access any other values inside of array, "this" keyword is used with that method.

15. for loop = It is used to create repetition loops. we can use if loop inside for loop to specify condition for
	its breakage. when condition meets we use break to end printing of array.

16. for each = it is is not loop but instead method on array. It will loop through any array each time until 
	condition is true.
	array_name.foreach( (s) => (condition));

17. for of and in loop = it is used same as console.log loop to print whole array. For In loop can be used to
	print only keys or values from a array. Interpolation is used on these loops to pretty print.